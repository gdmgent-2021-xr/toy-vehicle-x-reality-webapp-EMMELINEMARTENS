{"version":3,"sources":["App/components/Car/Martens_Emmeline_toy.glb","App/components/GlTransmissionFormat/glTF.glb","App/components/Suzanne/suzanne.glb","App/components/Lighting/index.js","App/components/Car/index.js","App/index.js","index.js"],"names":["module","exports","light","useRef","intensity","position","ref","useState","clockwise","setClockwise","gltf","useGLTF","car","nodes","materials","carRef","toggle","console","log","useFrame","current","rotation","y","THREE","degToRad","x","useSpring","Math","random","primitive","object","scene","onClick","showAxesHelper","useControl","group","type","value","showGridHelper","args","enablePan","enableRotate","enableZoom","dragToLook","Lighting","fallback","Car","ReactDOM","render","App","document","getElementById"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,kD,wCCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,+KCE5B,G,OAAA,WACb,IAAMC,EAAQC,mBAEd,OACE,oCACE,kCAAcC,UAAW,KACzB,sCAAkBA,UAAW,GAAKC,SAAU,CAAC,GAAI,GAAI,GAAIC,IAAKJ,IAC9D,gCAAYE,UAAW,KAAMC,SAAU,CAAC,EAAG,EAAG,Q,oCCCrC,aAAO,IAAD,EACeE,oBAAS,GADxB,mBACZC,EADY,KACDC,EADC,KAGbC,EAAOC,YAAQC,KAAK,GAHP,EAIQD,YAAQC,KAAI,GAAhCC,EAJY,EAIZA,MAAOC,EAJK,EAILA,UACRC,EAASZ,mBALI,EAOSI,oBAAS,GAPlB,mBAOZS,EAPY,UASnBC,QAAQC,IAAIR,GACVO,QAAQC,IAAI,SAAUL,GACxBI,QAAQC,IAAI,aAAcJ,GAE1BK,aAAS,WAIPJ,EAAOK,QAAQC,SAASC,EAAIC,YAAgBC,UAAU,GACtDT,EAAOK,QAAQC,SAASI,EAAIF,YAAgBC,SAAS,OAlBpC,IAoBXnB,EAAaqB,YAAU,CAC7BrB,SAAUW,EAAS,CAAC,EAAG,EAAG,GAKnB,CAA2B,GAAT,EAAhBW,KAAKC,SAAe,GAAkC,GAAT,EAAhBD,KAAKC,SAAe,GAAQ,KAN5DvB,SAUR,OAPAY,QAAQC,IAAIb,GAQV,kBAAC,IAASwB,UAAV,CACEC,OAAQpB,EAAKqB,MAChBC,QAAS,kBAAMvB,GAAcD,IAC1BH,SAAU,CAAC,KAAK,MAAO,IACvBC,IAAKS,EACLD,UAAWD,EAAMC,aC1BR,G,cAAA,WAEd,IAAMmB,EAAiBC,YAAW,cAAe,CAC9CC,MAAO,UACPC,KAAM,UACNC,OAAO,IAEHC,EAAiBJ,YAAW,cAAe,CAC/CC,MAAO,UACPC,KAAM,UACNC,OAAO,IAGT,OACE,kBAAC,IAAD,KACE,+BACCJ,GAAkB,qCAChBK,GAAkB,gCAAYC,KAAM,CAAC,GAAI,GAAI,SAAU,WAE1D,kBAAC,IAAD,CAAeC,WAAW,EAAMC,cAAc,EAAMC,YAAY,IAChE,kBAAC,IAAD,CAAaC,YAAY,KACxB,GAGQ,kBAACC,EAAD,OACR,EAEC,kBAAC,WAAD,CAAUC,SAAU,MAET,kBAACC,EAAD,UC7CnBC,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4c770d05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Martens_Emmeline_toy.7c0529c9.glb\";","module.exports = __webpack_public_path__ + \"static/media/glTF.ce019e05.glb\";","module.exports = __webpack_public_path__ + \"static/media/suzanne.fdd60495.glb\";","import React, { useRef } from \"react\";\n\nexport default () => {\n  const light = useRef();\n\n  return (\n    <>\n      <ambientLight intensity={0.9} />\n      <directionalLight intensity={0.5} position={[10, 10, 5]} ref={light} />\n      <pointLight intensity={1.12} position={[0, 0, 0]} />\n    </>\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport { useGLTF } from \"@react-three/drei\";\nimport * as THREE from 'three';\nimport { animated, useSpring } from \"react-spring/three\";\n\nimport car from \"./Martens_Emmeline_toy.glb\";\n\n\n\nexport default () => {\n  const [clockwise, setClockwise] = useState(false);\n\n  const gltf = useGLTF(car, true);\n  const {nodes, materials} = useGLTF(car,true)\n  const carRef = useRef();\n  // const speed = 0.025;\n  const [toggle, setToggle] = useState(true);\n\n  console.log(gltf);\n    console.log(\"nodes:\", nodes);\n  console.log(\"materials:\", materials);\n\n  useFrame(() => {\n    // logoRef.current.rotation.x += speed * (clockwise ? 1 : -1);\n    // carRef.current.rotation.y += speed * (clockwise ? 1 : -1);\n    // logoRef.current.rotation.z += speed * (clockwise ? 1 : -1);\n    carRef.current.rotation.y = THREE.MathUtils.degToRad(-2)\n    carRef.current.rotation.x = THREE.MathUtils.degToRad(90)\n  });\n  const { position } = useSpring({\n    position: toggle ? [0, 0, 0] : getPosition(),\n  });\n  console.log(position);\n\n  function getPosition() {\n    return [(Math.random() * 2 - 1) * 4, (Math.random() * 2 - 1) * 4, 0];\n  }\n\n\n  return (\n    <animated.primitive\n      object={gltf.scene}\n\t  onClick={() => setClockwise(!clockwise)}\n      position={[2.8,-12.5, -28]}\n      ref={carRef}\n      materials={nodes.materials}\n    />\n  );\n};","import React, { Suspense } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { FlyControls, OrbitControls } from \"@react-three/drei\";\nimport { DefaultXRControllers, VRCanvas } from \"@react-three/xr\";\nimport { useControl } from \"react-three-gui\";\n\nimport * as THREE from \"three\";\n\n\nimport {\n  GlTransmissionFormat,\n  Lighting,\n  Suzanne,\n  Pano,\n  Tripod,\n  Car,\n} from \"App/components\";\nimport \"./styles.css\";\n\n\nexport default () => {\n\n const showAxesHelper = useControl(\"Axes Helper\", {\n    group: \"Helpers\",\n    type: \"boolean\",\n    value: true,\n  });\n  const showGridHelper = useControl(\"Grid Helper\", {\n    group: \"Helpers\",\n    type: \"boolean\",\n    value: true,\n  });\n\n  return (\n    <Canvas>\n      <group>\n      {showAxesHelper && <axesHelper />}\n        {showGridHelper && <gridHelper args={[10, 10, 0xffffff, 0x333333]} />}\n      \n      <OrbitControls enablePan={true} enableRotate={true} enableZoom={true} />\n      <FlyControls dragToLook={true} />\n      {false && <DefaultXRControllers />}\n      </group>\n\n      {true && <Lighting />}\n      {false && <Tripod />}\n      {true && (\n        <Suspense fallback={null}>\n          {/* <Suzanne /> */}\n          {true && <Car />}\n          {/* <GlTransmissionFormat /> */}\n        </Suspense>\n      )}\n    </Canvas>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}